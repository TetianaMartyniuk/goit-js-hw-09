{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,wBAC/BI,SAAUL,SAASC,cAAc,0BAEnC,IAAIK,EAAQ,EAEZR,EAAKC,KAAKQ,iBAAiB,UAE3B,SAAoBC,GAClBA,EAAEC,iBACF,MAAMC,EAAOF,EAAEG,cAAcC,SACvBC,EAAa,CACjBC,SAAUC,OAAOL,EAAKN,OAAOY,OAC7Bd,MAAOa,OAAOL,EAAKR,MAAMc,OACzBb,KAAMY,OAAOL,EAAKP,KAAKa,QAEzBC,QAAQC,IAAIL,GAEZM,YAAW,KACT,MAAMC,EAAWC,aAAY,MAajC,UAAuBP,SAACA,EAAQZ,MAAEA,EAAKC,KAAEA,IACvC,MAAMmB,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,CAACC,EAASC,KAChCL,EAEFI,EAAQ,uBAAqBpB,QAAcJ,EAAOC,EAAOG,OAGzDqB,EAAO,sBAAoBrB,QAAcJ,EAAOC,EAAOG,MAAW,G,EAOtEsB,CA3BkBf,GA2BCgB,MAAMH,IACvB9B,EAAAkC,OAAOC,QAAQL,EAAQ,IAExBM,OAAOL,IACN/B,EAAAkC,OAAOG,QAAQN,EAAO,IACrBO,SAAQ,SA/BP5B,GAAS,EACLA,EAAQO,EAAWC,WACrBqB,cAAcf,GACdd,EAAQ,GAEVW,QAAQC,IAAIZ,EAAM,GACjBO,EAAWV,KAAK,GAClBU,EAAWX,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from \"notiflix\";\nconst refs = {\n  form: document.querySelector(\".form\"),\n  delay: document.querySelector(\"input[name='delay']\"),\n  step: document.querySelector(\"input[name='step']\"),\n  amount: document.querySelector(\"input[name='amount']\"),\n  btnStart: document.querySelector(\"button[type='submit']\")\n}\nlet count = 1;\nconst key = \"add-new-promise-data\";\nrefs.form.addEventListener(\"submit\", setPromise)\n\nfunction setPromise(e) {\n  e.preventDefault();\n  const data = e.currentTarget.elements;\n  const promiseObj = {\n    position: Number(data.amount.value),\n    delay: Number(data.delay.value),\n    step: Number(data.step.value)\n  }\n  console.log(promiseObj);\n  \n  setTimeout(() => {\n    const interval = setInterval(() => {\n      promiseResult(promiseObj);\n      count += 1;\n      if (count > promiseObj.position) {\n        clearInterval(interval);\n        count = 1;\n      }\n      console.log(count);\n    }, promiseObj.step);\n  }, promiseObj.delay)\n  \n  \n}\nfunction createPromise({position, delay, step}) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n    // Fulfill\n      resolve(`✅ Fulfilled promise ${count} in ${delay + step * count}ms`);\n  } else {\n    // Reject\n      reject(`❌ Rejected promise ${count} in ${delay + step * count}ms`);\n  }\n  })\n  return promise\n}\n\nfunction promiseResult(obj) {\n  createPromise(obj).then((resolve) => {\n    Notify.success(resolve);\n  })\n  .catch((reject) => {\n    Notify.failure(reject);\n  }).finally(() => {\n    \n  });\n}\n\n// function startPromises() {\n//     setTimeout(() => {\n//     const interval = setInterval(() => {\n//       promiseResult(promiseObj);\n//       count += 1;\n//       if (count > Number(promiseObj.position)) {\n//         clearInterval(interval);\n//       }\n//       console.log(count);\n//     }, promiseObj.step);\n//   }, promiseObj.delay)\n// }\n\n// function addDataToStorage(obj) {\n//     let dataObj = {};\n//     console.log(dataObj);\n//     dataObj.delay = obj.delay.value;\n//     dataObj.amount = obj.position.value;\n//     dataObj.step = obj.step.value;\n//     localStorage.setItem(key, JSON.stringify(dataObj))\n\n// }\n\n// createPromise(2, 1500)\n  // .then(({ position, delay }) => {\n  //   console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  // })\n  // .catch(({ position, delay }) => {\n  //   console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  // });\n\n\n\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","btnStart","$47d4ff9957288465$var$count","addEventListener","e","preventDefault","data","currentTarget","elements","promiseObj","position","Number","value","console","log","setTimeout","interval","setInterval","shouldResolve","Math","random","Promise","resolve","reject","$47d4ff9957288465$var$createPromise","then","Notify","success","catch","failure","finally","clearInterval"],"version":3,"file":"03-promises.0820d2a3.js.map"}